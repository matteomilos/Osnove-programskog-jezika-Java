package hr.fer.zemris.java.custom.scripting.lexer;

import hr.fer.zemris.java.custom.scripting.elems.Element;

/**
 * This class represents token that is generated by lexer instance of the class
 * {@linkplain SmartScriptLexer}. Token encapsulates object of type
 * <code>Element</code> which represents processed content of document.
 * 
 * @author Matteo Milo≈°
 *
 */
public class SmartScriptToken {
	/**
	 * Enumeration that defines token type.
	 */
	private SmartScriptTokenType type;
	/**
	 * Object of type <code>Element</code> that is encapsulated by token.
	 */
	private Element value;

	/**
	 * Public constructor that gets two arguments, enumeration that defines type
	 * and object that needs to be stored.
	 * 
	 * @param type
	 *            type of token
	 * @param value
	 *            object that will be stored
	 * @throws IllegalArgumentException
	 *             if token type is <code>null</code> value
	 */
	public SmartScriptToken(SmartScriptTokenType type, Element value) {
		if (type == null) {
			throw new IllegalArgumentException();
		}
		this.type = type;
		this.value = value;
	}

	/**
	 * Public getter of object of type <code>Element</code> that is stored by
	 * token.
	 * 
	 * @return token value
	 */
	public Element getValue() {
		return value;
	}

	/**
	 * Public getter of enumeration that defines token.
	 * 
	 * @return token type
	 */
	public SmartScriptTokenType getType() {
		return type;
	}

	@Override
	public String toString() {
		return value.toString();
	}

}
